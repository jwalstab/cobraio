<section class="content">
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="body block-header">
                        <div class="row">
                            <div class="col-lg-6 col-md-8 col-sm-12">
                                <h2>Data Tables Lookup</h2>
                                <ul class="breadcrumb p-l-0 p-b-0 ">
                                    <li class="breadcrumb-item active">Select IOT device ID and dates to show all data recieved between these times</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-lg-3 col-md-12 col-sm-12">
                <div class="card">
                    <div class="body">
                        <h6>Device Broadcast ID</h6>
                        <input type="text" class="form-control" id="LegioGuardIDText" value="" />
                        <div class="demo-masked-input">
                            <b>From</b>
                            <div class="input-group">
                                <span class="input-group-addon"> <i class="zmdi zmdi-calendar-note"></i></span>
                                <input type="text" class="form-control datetime" placeholder="Ex: 30/07/2016 23:59" id="dateFrom">
                            </div>
                        </div>
                        <div class="demo-masked-input">
                            <b>To</b>
                            <div class="input-group">
                                <span class="input-group-addon"> <i class="zmdi zmdi-calendar-note"></i></span>
                                <input type="text" class="form-control datetime" placeholder="Ex: 30/07/2016 23:59" id="dateTo">
                            </div>
                        </div>
                        <br />
                        <button class="btn btn-success" id="myButton" onclick="GetAPIData()">Load data table</button>
                        <br />
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-12">
                <div class="card">
                    <div class="header">
                        <h2><strong>Main Table</strong></h2>
                    </div>
                    <div class="body">
                        <div id="maintable"></div>
                    </div>
                    <div class="header">
                            <h2><strong>Table Averages</strong></h2>
                    </div>
                    <div class="body">
                    <div id="averagetable"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<script type="text/javascript">
    
    function crazytable(data){
        //main table creation, link to ext script
    var table = new Tabulator("#maintable", {
        pagination:"local",
        paginationSize:10,
        paginationSizeSelector:[10, 25, 50, 100, 250, 500, 1000],
        autoColumns:true
    });
    
    //average table calculation
    table.setData(data);
    var labels = (Object.keys(data[0]));
    averageData = JSON.parse(JSON.stringify(data[0])); // clone object here
    var counter = 0;
    for (var i = 0; i < data.length; i++)
    {
        labels.forEach(element => {
                if (element == "time" || element == "_id"){// loops through all data above, then below adds each element together
                        }
                else{
                    averageData[element] += data[i][element];
                }
            });
    }
    labels.forEach(element => {
        if (element == "time" || element == "_id"){// loops through the averagedata created object to create averages
                        }
                else{
                    averageData[element] = averageData[element] / data.length;
                }
    });
    delete averageData.time;
    delete averageData._id;
    var averagetable = new Tabulator("#averagetable", {
        autoColumns:true
    });
    averageDataArray = [];
    averageDataArray.push(averageData); //table needs an array or some bs to work
    averagetable.setData(averageDataArray);
    //console.log(averageData);
    }

</script>
<script>
    function GetAPIData() {
        var packetsToDisplay = 10;
        var fromVal = new Date(document.getElementById("dateFrom").value);
        var toVal = new Date(document.getElementById("dateTo").value);
        var dates = {
            from: fromVal,
            to: toVal
        };
        console.log(dates.to);
        console.log(dates.from);
        console.log(dates);
        var lgid = document.getElementById('LegioGuardIDText').value;
        var res3 = "http://165.22.241.11:3000/52/betweendates"
        $.ajax({
            type: "POST",
            url: res3,
            data: JSON.stringify(dates),
            contentType: "application/json; charset=utf-8",
            crossDomain: true,
            dataType: "json",
            success: function (data, status, jqXHR) {
                GlobalData = [];
                data.forEach(element => {
                    GlobalData.push(element);
                });
                var expressedData = data[0];
                var maxPackets = packetsToDisplay;
                for (var ed = 0; ed < 10; ed++) {
                    const dataCheck = data[ed];
                    if (dataCheck == null) {
                        maxPackets = ed - 1;
                        console.log(maxPackets + "data check phase");
                    }
                }
                var maxPacketsFinal;
                if (maxPackets < packetsToDisplay) {
                    maxPacketsFinal = maxPackets;
                }
                else {
                    maxPacketsFinal = packetsToDisplay;
                }
                ///(((((((((((((((((((((((((((((((())))))))))))))))))))))))))))))))
                if (expressedData != null)
                {
                    //TableAPP(data);
                    crazytable(data);
                }
                else {
                    console.log("EXPRESSED DATA NULL!")
                }
            },
            error: function (jqXHR, status) {
                console.log("ERROR");
            }
        });
    }
</script>
<script src="assets/plugins/jquery-inputmask/jquery.inputmask.bundle.js"></script> <!-- Input Mask Plugin Js -->
<link rel="stylesheet" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
<script src ="http://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script>
    var $demoMaskedInput = $('.demo-masked-input');
    $demoMaskedInput.find('.datetime').inputmask('d/m/y h:s', { placeholder: '__/__/____ __:__', alias: "datetime", hourFormat: '24' });
</script>