<link href="assets/scroll.css" rel="stylesheet">

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>

<section class="content">
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="body block-header">
                        <div class="row">
                            <div class="col-lg-6 col-md-8 col-sm-12">
                                <h2>RealTime IoT Device Monitor</h2>
                                <ul class="breadcrumb p-l-0 p-b-0 ">
                                    <li class="breadcrumb-item active">Select an IoT device to monitor incoming data in realtime</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="header" id="rheader">
                            <h2><strong>Loading chart...</strong></h2>
                            <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                      Select Device
                                      <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu scrollable-menu" aria-labelledby="dropdownMenu1" id="deviceSelectMenu">
                                    </ul>
                            </div>
                            </div>
                        </div>
                        <div class="body">
                                <div id="chart2">
                                </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>

</section>

<script>

    LoadDeviceSelectBox();
    GetDataFromAPI();

    var chosenDevice;
    var chart;
    var firstChartLoad = true;
    var pullAmount;

    function LoadDeviceSelectBox(){
        var dropboxURL = masterURL + "/jwalstab/lookup_devices/";
        $.ajax({type: "GET", url: dropboxURL, contentType: "application/json; charset=utf-8", crossDomain: true,  dataType: "json",
            success: function (data, status, jqXHR) {
                //creates the links in the dropdown menu and populates device list
                deviceList = [];
                data.forEach(element => {
                    var newlink = $('<li><a href="#" data-value="action">' + element.devicename + '</a></li>');
                    $('#deviceSelectMenu').append(newlink);
                    deviceList.push(element);
                });

                //adds code to change when device selected
                $("#deviceSelectMenu li a").click(function(){
                    $(this).parents(".dropdown").find('.btn').html($(this).text() + ' <span class="caret"></span>');
                    $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
                    var selectedvaluefromdropdownbox = $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
                    deviceList.forEach(element => {
                        if (element.devicename == selectedvaluefromdropdownbox[0].innerText)
                        {
                            chosenDevice = element.deviceID;
                            chosenDeviceName = element.devicename;
                        }
                    });
                    console.log(chosenDevice);
                    });
            },
            error: function (jqXHR, status) {
                console.log("ERROR");
            }
        });
    }

    function GetDataFromAPI(){
        if (firstChartLoad == true){ pullAmount = 1}
        else{
            pullAmount = 1;
        }
        if (chosenDevice != null){
            var lastDataURL = masterURL + "/" + chosenDevice + "/last/" + pullAmount;
            $.ajax({
            type: "GET",
            url: lastDataURL,
            contentType: "application/json; charset=utf-8",
            crossDomain: true,
            dataType: "json",
            success: function (data, status, jqXHR) {
                if (firstChartLoad == true){
                    console.log("FIRST!");
                    firstChartLoad = false;
                    CreateChartAndLabels(data);
                }
                else{
                    UpdateChart(data);
                }
            },
            error: function (jqXHR, status) {
                console.log("jqXHYR:" + jqXHR + "status:" + status)
            }
        });
        }
        else
        {
            console.log("No device selected!");
        }
    setTimeout(GetDataFromAPI, 10000);
    }

    function CreateChartAndLabels(data){
    if (data[0] != null)
            {
                var keyNames = [];
                var getLabelsSmall = Object.keys(data[0]);
                getLabelsSmall.forEach(element => { //gets labels for buttons
                    if (element == "time" || element == "_id"){//makes sure not to add buttons for time or datapacket ID
                    }
                    else
                    {
                    keyNames.push(element);
                    }
                });
                var firstTime = true;
                keyNames.forEach(propname => {
                    var DataToPush = [];
                    var xArray = [];
                    var yArray = [];
                    data.forEach(globalpiece => {
                        if (globalpiece[propname] != null)
                            {
                                if (typeof globalpiece[propname] === "boolean"){
                                    if (globalpiece[propname] == true)
                                    {
                                        globalpiece[propname] = 100;
                                    }
                                    else
                                    {
                                        (globalpiece[propname] = 1);
                                    }
                                }
                                yArray.push(globalpiece[propname]);
                                xArray.push(globalpiece.time);
                                }
                    });
                    var ploatLoadData = {
                        x: xArray,
                        y: yArray,
                        name: propname,
                        type: 'scatter',
                        mode: "lines",
                        visible: "legendonly"
                        };
                        Plotly.addTraces('chart2', ploatLoadData);
                });
            }
    }

    function UpdateChart(data){
    if (data[0] != null)
            {
                console.log("Firing!");
                var keyNames = [];
                var getLabelsSmall = Object.keys(data[0]);
                getLabelsSmall.forEach(element => { //gets labels for buttons
                    if (element == "time" || element == "_id"){//makes sure not to add buttons for time or datapacket ID
                    }
                    else
                    {
                    keyNames.push(element);
                    }
                });
                var firstTime = true;
                keyCounter = 0;
                keyNames.forEach(propname => {
                    var DataToPush = [];
                    var xArray = [];
                    var yArray = [];
                    data.forEach(globalpiece => {
                        if (globalpiece[propname] != null)
                            {
                                if (typeof globalpiece[propname] === "boolean"){
                                    if (globalpiece[propname] == true)
                                    {
                                        globalpiece[propname] = 100;
                                    }
                                    else
                                    {
                                        (globalpiece[propname] = 1);
                                    }
                                }
                                yArray.push(globalpiece[propname]);
                                xArray.push(globalpiece.time);
                                }
                    });
                    var ploatLoadData = {
                        x: [xArray],
                        y: [yArray]
                        };
                        Plotly.extendTraces('chart2', ploatLoadData, [keyCounter]);
                    keyCounter++;
                });
            }
    }

    var plotdata = [{
        x: ['2010-10-04 22:23:00'],
        y: [0],
        name: 'blee!',
        type: 'scatter',
        mode: "lines",
        visible: false
    }];

    Plotly.newPlot('chart2', plotdata, layout, {responsive: true, displaylogo: false});

    var layout = {
    title: 'Basic Time Series',
    };

    Plotly.deleteTraces('chart2', 0);
    

    var yv = [322];
    var xv = ['2014-01-04 22:23:00'];
    
    function TestUpdateNewChart(){
        Plotly.extendTraces('chart2', {y: [yv], x: [xv]}, [0])
    }



</script>

