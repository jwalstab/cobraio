<!DOCTYPE html>
<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.15.1/dist/phaser-arcade-physics.min.js"></script>
</head>
<body>

    <div>

        <div id="phaserdiv"></div>
    </div>
    <script>
    var config = {
        type: Phaser.AUTO,
        width: 1000,
        height: 600,
        parent: 'phaserdiv',
        physics: {
            default: 'arcade',
/*             arcade: {
                gravity: { y: 200 }
            } */
        },
        scene: {
            preload: preload,
            create: create,
            update: update
        }
    };

    var game = new Phaser.Game(config);
    function preload ()
    {
        /* this.load.setBaseURL(''); */

        this.load.image('background', 'phaser/MainCanvas.png');
/*         this.load.image('logo', 'phaser/logo.png');
        this.load.image('boxes', 'phaser/boxes.png');
        this.load.image('fan', 'phaser/fan.png'); */
    }

    var whiteboxtext;
    var num = 1;
    var fanImage;

    function create ()
    {
            this.add.image(500, 300, 'background')
/*             this.add.image(190, 60, 'logo'),
            this.add.image(80, 330, 'boxes'),
            this.add.image(720, 330, 'boxes'),
            */fanImage = this.add.image(500, 300, 'fan')
            /*whiteboxtext = [
            this.add.text(40, 265, 'Phaser0', { fontFamily: 'Arial', fontSize: 24, color: '#00ff00' }),
            this.add.text(40, 335, 'Phaser1', { fontFamily: 'Arial', fontSize: 24, color: '#00ff00' })
            ] */
    }

    function update(){
        num++;
/*         whiteboxtext[0].setText("bla:" + num);
        whiteboxtext[1].setText("gla:" + (num -10)); */
    }
    </script>

</body>

<!-- /* 
        var particles = this.add.particles('red');

        var emitter = particles.createEmitter({
            speed: 100,
            scale: { start: 1, end: 0 },
            blendMode: 'ADD'
        }); */

/*         var logo = this.physics.add.image(400, 100, 'logo');

        logo.setVelocity(100, 200);
        logo.setBounce(1, 1);
        logo.setCollideWorldBounds(true);

        emitter.startFollow(logo);
        */s -->

</html>


